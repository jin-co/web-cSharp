// <auto-generated />
using System;
using A1_TransactionRecord.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace A1_TransactionRecord.Migrations
{
    [DbContext(typeof(TransactionContext))]
    partial class TransactionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("A1_TransactionRecord.Models.TransactionRecordKbaek7943", b =>
                {
                    b.Property<int>("TransactionRecordKbaek7943Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double?>("SharePrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("TicketSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TransactionRecordKbaek7943Id");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("TransactionRecordKbaek7943s");

                    b.HasData(
                        new
                        {
                            TransactionRecordKbaek7943Id = 1,
                            CompanyName = "Microsoft",
                            Quantity = 100,
                            SharePrice = 123.45,
                            TicketSymbol = "MSFT",
                            TransactionTypeId = "Sell"
                        },
                        new
                        {
                            TransactionRecordKbaek7943Id = 2,
                            CompanyName = "Google",
                            Quantity = 100,
                            SharePrice = 2701.7600000000002,
                            TicketSymbol = "GOOG",
                            TransactionTypeId = "Buy"
                        });
                });

            modelBuilder.Entity("A1_TransactionRecord.Models.TransactionType", b =>
                {
                    b.Property<string>("TransactionTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionTypeId");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            TransactionTypeId = "Buy",
                            Commission = 5.9900000000000002,
                            Name = "Buy"
                        },
                        new
                        {
                            TransactionTypeId = "Sell",
                            Commission = 5.4000000000000004,
                            Name = "Sell"
                        });
                });

            modelBuilder.Entity("A1_TransactionRecord.Models.TransactionRecordKbaek7943", b =>
                {
                    b.HasOne("A1_TransactionRecord.Models.TransactionType", "TrasactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrasactionType");
                });
#pragma warning restore 612, 618
        }
    }
}
